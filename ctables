#!/bin/sh

COMMAND=$1
GUESTNAME=$2
GUEST_IFNAME=eth1

help() {
  echo "Syntax:"
  echo "$0 up <guest>"
  echo "$0 down <guest>"
  exit 1
}

[ "$COMMAND" = "up" ] || [ "$COMMAND" = "down" ] || help
[ "$GUESTNAME" ] || help

# find the guest
# try to lookup the container with Docker.
RETRIES=3
while [ "$RETRIES" -gt 0 ]; do
  DOCKERPID=$(docker inspect --format='{{ .State.Pid }}' "$GUESTNAME")
  [ "$DOCKERPID" != 0 ] && break
  sleep 1
  RETRIES=$((RETRIES - 1))
done

[ "$DOCKERPID" = 0 ] && {
  die 1 "Docker inspect returned invalid PID 0"
}

[ "$DOCKERPID" = "<no value>" ] && {
  die 1 "Container $GUESTNAME not found, and unknown to Docker."
}

NSPID=$DOCKERPID
LINKFILE="/var/run/netns/$NSPID"

# make the link
mkdir -p /var/run/netns
/bin/rm -f "$LINKFILE"
ln -s "/proc/$NSPID/ns/net" "$LINKFILE"

# block the traffic or allow the traffic
if [ "$COMMAND" = "down" ]; then
  ip netns exec $NSPID iptables -I INPUT -j DROP
  ip netns exec $NSPID iptables -I OUTPUT -j DROP
else
  # make sure we have deleted them all
  EXITCODE=0
  while [ "$EXITCODE" = 0 ]; do
    ip netns exec $NSPID iptables -D INPUT -j DROP >/dev/null 2>&1
    EXITCODE=$?
  done
  EXITCODE=0
  while [ "$EXITCODE" = 0 ]; do
    ip netns exec $NSPID iptables -D OUTPUT -j DROP >/dev/null 2>&1
    EXITCODE=$?
  done
fi

/bin/rm -f "$LINKFILE"

